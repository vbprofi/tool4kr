/*
 * Created by SharpDevelop.
 * User: user
 * Date: 20.10.2018
 * Time: 13:44
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;
using System.Runtime.CompilerServices;
using System.Data.Entity;
using System.Linq;
using System.Collections.Generic;
using autogeneratedDB;

namespace DBTest.modules
{
	/// <summary>
	/// Zentrale Klasse für Datenbankoperationen. Abstrahiert die Datenbank und stellt Datenbanken-Transaktionen
	/// zur Verfügung.
	/// </summary>
	public class KRDatabase
	{

		/** The context */
		private DatabaseContext context = new DatabaseContext();
		private DBContextInitializer contextInitializer = new DBContextInitializer();
		
		public KRDatabase()
		{
		    //Datenbank erzeugen, falls nicht vorhanden
            Database.SetInitializer(contextInitializer);

			//Konfigurieren            
			configure(context);
		}
		
		public String getVersionString()
		{
			return context.Database.Connection.ServerVersion;
		}
		
		/**
		 * Init-Methode zum konfigurieren eines Context.
		 */
		private void configure(DatabaseContext context)
		{
			context.Configuration.AutoDetectChangesEnabled = false;
            context.Configuration.LazyLoadingEnabled = false;
            context.Configuration.ValidateOnSaveEnabled = false;
            context.Configuration.UseDatabaseNullSemantics = false;
            context.Configuration.ProxyCreationEnabled = false;
            context.Configuration.EnsureTransactionsForFunctionsAndCommands = false;
            context.SaveChanges();
		}
		
		public void addRecord(Abo record)
		{
			context.abo.Add(record);
		}
		
		public void addRecord(Ausgabe record)
		{
			context.ausgabe.Add(record);
		}
		
		public void addRecord(Bemerkung record)
		{
			context.bemerkung.Add(record);
		}
		
		public void addRecord(Kunden record)
		{
			context.kunden.Add(record);
		}
		
		public void addRecord(Rechnung record)
		{
			context.rechnung.Add(record);
		}
		
		public void addRecord(Rechnungsposten record)
		{
			context.rechnungsposten.Add(record);
		}
		
		public void addRecord(Status record)
		{
			context.status.Add(record);
		}
		
		public DbSet<Abo> getAbo()
		{
			return context.abo;
		}
		
		public DbSet<Ausgabe> getAusgabe()
		{
			return context.ausgabe;
		}
		
		public DbSet<Bemerkung> getBemerkung()
		{
			return context.bemerkung;
		}
		
		public DbSet<Kunden> getKunden()
		{
			return context.kunden;
		}
		
		public DbSet<Rechnung> getRechnung()
		{
			return context.rechnung;
		}
		
		public DbSet<Rechnungsposten> getRechnungsposten()
		{
			return context.rechnungsposten;
		}
		
		public DbSet<Status> getStatus()
		{
			return context.status;
		}
		
		public DbContextTransaction beginWriteTransaction()
		{
			return context.Database.BeginTransaction();
		}
		
		public void endWriteTransaction(DbContextTransaction transaction)
		{
			context.SaveChanges();
			transaction.Commit();
		}
		
		public DbContextTransaction beginReadTransaction()
		{
			return context.Database.BeginTransaction();
		}
		
		public void endReadTransaction(DbContextTransaction transaction)
		{
			transaction.Commit();
		}
	}
}
